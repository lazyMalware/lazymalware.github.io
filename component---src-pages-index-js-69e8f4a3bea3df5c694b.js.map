{"version":3,"sources":["webpack:///./src/components/CustomCard.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["CustomCard","props","_this","_Component","call","this","toggle","bind","_assertThisInitialized","state","collapse","setState","render","react_default","a","createElement","Card","onClick","CardHeader","headerText","Collapse","isOpen","CardBody","company","job","location","details","Component","IndexPage","layout","seo","title","components_CustomCard","gatsby_browser_entry","to","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","Layout","children","_856328897","Fragment","header","paddingTop","Date","getFullYear","href"],"mappings":"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","file":"component---src-pages-index-js-69e8f4a3bea3df5c694b.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Button, CardBody, Card, CardHeader } from 'reactstrap';\r\nimport PropTypes from \"prop-types\"\r\n\r\nclass CustomCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = { collapse: false };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(state => ({ collapse: !state.collapse }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <Card> \r\n          <a onClick={this.toggle}> <CardHeader>  {this.props.headerText}</CardHeader></a>\r\n            <Collapse isOpen={this.state.collapse}>\r\n              <CardBody>\r\n                {this.props.company} , {this.props.job}\r\n                <br />\r\n                {this.props.location}\r\n                <br />\r\n                {this.props.details}\r\n              </CardBody>\r\n            </Collapse>\r\n          </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCustomCard.propTypes = {\r\n    headerText: PropTypes.string,\r\n    company: PropTypes.string,\r\n    job: PropTypes.string,\r\n    location: PropTypes.string,\r\n    details: PropTypes.details,\r\n  };\r\n\r\nexport default CustomCard;\r\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { Card, CardHeader, CardBody } from 'reactstrap';\r\nimport { Collapse} from 'reactstrap';\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Image from \"../components/image\"\r\nimport SEO from \"../components/seo\"\r\nimport CustomCard from \"../components/CustomCard\"\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Resume\" />\r\n    <h1>Resume</h1>\r\n    <CustomCard headerText=\"Education\" company=\"riddle\" job=\"rdtf\" location=\"p\" details=\"yftft\"/>\r\n    <CustomCard headerText=\"Experience\"  />\r\n    <Link to=\"/page-2/\">Go to page 2</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `rebeccapurple`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: 960,\r\n          padding: `0px 1.0875rem 1.45rem`,\r\n          paddingTop: 0,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer>\r\n          © {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}